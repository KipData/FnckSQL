name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_MY_REGISTRY_INDEX: https://github.com/rust-lang/crates.io-index

jobs:
  # 1
  check:
    name: Rust project check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-04-26
          override: true
          components: rustfmt, clippy

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      # `cargo check` command here will use installed `nightly`
      # as it is set as an "override" for current directory

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check


      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build


      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
  # 2
  fmt:
    name: Rust fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-04-26
          override: true
          components: rustfmt, clippy

      # `cargo check` command here will use installed `nightly`
      # as it is set as an "override" for current directory

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
  # 3
  e2e:
    name: Rust e2e sqllogictest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-04-26
          override: true
          components: rustfmt, clippy

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      # `cargo check` command here will use installed `nightly`
      # as it is set as an "override" for current directory

      - name: Run cargo run sqllogictest-test
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --bin sqllogictest-test --manifest-path ./tests/sqllogictest/Cargo.toml
#  codecov:
#    name: Upload coverage reports to Codecov
#    runs-on: ubuntu-latest
#    steps:
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          files: ./lcov.info
#          flags: rust
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}